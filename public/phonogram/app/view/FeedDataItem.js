/*
 * File: app/view/FeedDataItem.js
 *
 * This file was generated by Sencha Architect
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.3.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.3.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Recccords.view.FeedDataItem', {
    extend: 'Ext.dataview.component.DataItem',
    alias: 'widget.feedDataItem',

    requires: [
        'Ext.Container',
        'Ext.Img'
    ],

    config: {
        border: '',
        itemId: 'feedItem',
        padding: 0,
        style: '',
        styleHtmlContent: true,
        layout: 'vbox',
        items: [
            {
                xtype: 'container',
                id: 'NameContainer',
                layout: 'hbox',
                items: [
                    {
                        xtype: 'component',
                        flex: 2,
                        html: 'Text',
                        itemId: 'title',
                        margin: '0 0 0 5%',
                        padding: '3 0 0 0'
                    },
                    {
                        xtype: 'container',
                        flex: 1,
                        html: '<p align="right">hours ago</p>',
                        id: 'TimeContainer',
                        margin: '0 5% 0 0',
                        padding: '0 0 10 10'
                    },
                    {
                        xtype: 'container',
                        centered: false,
                        docked: 'bottom',
                        height: 240,
                        id: 'ReleaseContainer',
                        margin: '5%',
                        width: '90%',
                        layout: 'vbox',
                        items: [
                            {
                                xtype: 'image',
                                centered: true,
                                height: 240,
                                itemId: 'releaseimg',
                                maxWidth: '100%',
                                width: '100%',
                                backgroundCls: 'detailImageBackground',
                                src: ''
                            }
                        ]
                    }
                ]
            }
        ],
        listeners: [
            {
                fn: 'onReleaseimgError',
                event: 'error',
                delegate: '#releaseimg'
            }
        ]
    },

    onReleaseimgError: function(image, e, eOpts) {
        image.setSrc('https://s3.amazonaws.com/recccords/images/vinyl-placeholder-large.png');
    },

    updateRecord: function(record) {
        // Provide an implementation to update this container's child items
        var me = this;
        if(record){

            me.down('#NameContainer').down('#ReleaseContainer').down('#releaseimg').setSrc(record.get('recordThumb'));

            var activityType = record.get('userActivity') == 'addWants' ? 'wants' : 'added';
            var titletxt = '<b>'+record.get('username')+'</b> ' + activityType + '<br>'+record.get('recordArtist')+' - '+record.get('recordName');

            me.down('#NameContainer').down('#title').setHtml(titletxt);
            me.down('#NameContainer').down('#TimeContainer').setHtml('<p align="right">'+record.get('timeAgo')+'</p>');

            me.callParent(arguments);

        }


    }

});
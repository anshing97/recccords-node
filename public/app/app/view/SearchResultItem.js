/*
 * File: app/view/SearchResultItem.js
 *
 * This file was generated by Sencha Architect
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.3.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.3.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Phonogram.view.SearchResultItem', {
    extend: 'Ext.dataview.component.DataItem',
    alias: 'widget.searchResultItem',

    requires: [
        'Ext.Img',
        'Ext.Button'
    ],

    config: {
        border: '',
        itemId: 'searchResultItem',
        padding: 0,
        style: '',
        styleHtmlContent: true,
        layout: 'hbox',
        itemCls: 'photo',
        items: [
            {
                xtype: 'image',
                height: 90,
                itemId: 'img',
                padding: '0 10 0 0',
                width: 90,
                src: ''
            },
            {
                xtype: 'component',
                flex: 1,
                html: 'Text',
                itemId: 'title',
                padding: '3 0 0 10'
            },
            {
                xtype: 'button',
                border: 0,
                bottom: '',
                height: 50,
                itemId: 'btn',
                margin: 20,
                padding: '',
                width: 50,
                iconCls: 'add',
                text: ''
            }
        ],
        listeners: [
            {
                fn: 'onImgError',
                event: 'error',
                delegate: '#img'
            },
            {
                fn: 'onBtnTap',
                event: 'tap',
                delegate: '#btn'
            }
        ]
    },

    onImgError: function(image, e, eOpts) {
        image.setSrc('https://s3.amazonaws.com/recccords/images/vinyl-placeholder.png');
    },

    onBtnTap: function(button, e, eOpts) {
        var record = this.getRecord();

        var successCB = function(){
           Ext.Msg.alert("added to collection." );
        };

        var failCB = function(){
            Ext.Msg.alert("errror adding to collection." );
        };

        saveToCollection(record.data,successCB,failCB);

        e.stopPropagation();
    },

    updateRecord: function(record) {
        // Provide an implementation to update this container's child items

        var me = this;
        if(record){
            me.down('#img').setSrc(record.get('thumb'));
            var titletxt = record.get('title')+'<br>'+record.get('label');
            if (titletxt.length > 120)
                titletxt = titletxt.substr(0,120);
            me.down('#title').setHtml(titletxt);
            me.callParent(arguments);
        }


    }

});
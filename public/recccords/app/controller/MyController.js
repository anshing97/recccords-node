/*
 * File: app/controller/MyController.js
 *
 * This file was generated by Sencha Architect version 2.2.3.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.3.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.3.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Recccords.controller.MyController', {
    extend: 'Ext.app.Controller',

    config: {
        refs: {
            signUpContainer: '#signupContainer',
            startContainer: '#startContainer',
            subContainer: '#subContainer',
            createAccountResponse: '#createAccountResponse',
            signupForm: '#signupForm',
            loginContainer: '#loginContainer',
            loginForm: '#loginForm',
            loginResponse: '#loginResponse',
            releaseListContainer: '#releaseListContainer',
            releaseList: '#releaseList'
        },

        control: {
            "button#mybutton3": {
                tap: 'onSignUpTap'
            },
            "button#createAccountButton": {
                tap: 'onCreateAccountTap'
            },
            "button#signInButton": {
                tap: 'onSignInTap'
            },
            "button#loginButton": {
                tap: 'onLoginButtonTap'
            },
            "button#connectDiscogsButton": {
                tap: 'onDiscogsConnect'
            }
        }
    },

    onSignUpTap: function(button, e, eOpts) {
        signupView = Ext.create('Recccords.view.SignUpContainer', {
            title: 'Recccords'
        });
        this.getSubContainer().push(signupView);



        //this.parseLogin(me.appkey,me.jskey,object);
    },

    onCreateAccountTap: function(button, e, eOpts) {
        console.log("onButtonTap");
        var me = this;

        loginSuccess = function(result){
            me.getCreateAccountResponse().setHtml("user logged in at: " +result.createdAt);
            me.loggedInView = Ext.create('Recccords.view.LoggedInContainer', {
                title: 'Welcome to Recccords'
            });
            //var model = getStore('
            me.getSubContainer().removeAll(true,false);
            me.getSubContainer().push(me.loggedInView);

            // me.parseLogin(me.appkey,me.jskey,{username:me.username,password:me.password});
        }
        me.loginSuccess = loginSuccess;
        loginFailure = function(result) {
            me.getCreateAccountResponse().setHtml(result.error);
            console.log("loginfail");
            var error = result.error;
            console.log(error);

        }
        me.loginFailure = loginFailure;
        objectCreated = function(result){
            me.getCreateAccountResponse().setHtml("user created at: " +result.createdAt);
            me.parseLogin(me.username,me.password,me.loginSuccess,me.loginFailure);
        }
        objectCreatedError= function(result) {
            me.getCreateAccountResponse().setHtml(result.error);
            console.log("objectCreatedError");
            var error = result.error;
            console.log(error);

        }



        var values = me.getSignupForm().getValues();
        me.username = values.emailSignupField;
        me.password = values.passwordSignupField;
        this.parseCreateUser(me.username,me.password,objectCreated,objectCreatedError);

    },

    onSignInTap: function(button, e, eOpts) {
        signinView = Ext.create('Recccords.view.LoginContainer', {
            title: 'Recccords'
        });
        this.getSubContainer().push(signinView);

    },

    onLoginButtonTap: function(button, e, eOpts) {
        console.log("onLoginButtonTap");
        me = this;


        loginSuccess = function(result){
            me.getLoginResponse().setHtml("user logged in at: " +result.user.createdAt);
            me.loggedInView = Ext.create('Recccords.view.LoggedInContainer', {
                title: 'Welcome to Recccords'
            });
            //var model = getStore('
            me.getSubContainer().removeAll(true,false);
            me.getSubContainer().push(me.loggedInView);

            // me.parseLogin(me.appkey,me.jskey,{username:me.username,password:me.password});
        }
        me.loginSuccess = loginSuccess;
        loginFailure = function(result) {
            me.getLoginResponse().setHtml(result.msg);
            console.log("loginfail");
            var error = result.error;
            console.log(error);

        }
        me.loginFailure = loginFailure;

        var values = me.getLoginForm().getValues();
        me.username = values.emailSignupField;
        me.password = values.passwordSignupField;
        me.parseLogin(me.username,me.password,me.loginSuccess,me.loginFailure);

    },

    onDiscogsConnect: function(button, e, eOpts) {
        location.href='auth/';
    },

    parseLogin: function(username, password, successcallback, failcallback) {
        console.log('parseLogin ');
        Ext.Ajax.request({
            url: 'login/',
            method: 'POST',
            params: {
                username: username,
                password: password
            },
            success: function(response){
                var responseObj = JSON.parse(response.responseText);
                if(responseObj.type == 'success'){
                    successcallback(responseObj);
                }
                if(responseObj.type == 'fail'){
                    failcallback(responseObj);
                }
            }
        });

    },

    parseCreateUser: function(username, password, successcallback, failcallback) {
        Ext.Ajax.request({
            url: 'signup/',
            method: 'POST',
            params: {
                username: username,
                password: password
            },
            success: function(response){
                var responseObj = JSON.parse(response.responseText);
                if(responseObj.type == 'success'){
                    successcallback(responseObj);
                }
                if(responseObj.type == 'fail'){
                    failcallback(responseObj);
                }
            }
        });

    },

    launch: function() {
        me = this;
        //my app
        //me.appkey = 'gUJ3KCIMVjOdRuZwGiFDFARd8Zrm63M2GyW1Z2Lx';
        //me.jskey = 'XQVQ0I4X60TFov04NPtojjrkrhuTrBWKTA1F1FzS';
        //me.restkey = 'LNxE80A5EMuE5VNtRuCEQlT1SUjJYsSaoSR06WqE';

        //bens app
        me.appkey = '6Fj3b3fSBxz8k9mDWRHzl2uXmoSTqxleieQA4PL2';
        me.jskey = 'wRXCwtc1earGjrgLfdJk9dVwilt0udunXMB3BbcE';
        me.restkey = 'Z2FdTJK2AS31zVmjMUkBHHp9YFwvF6jno2aAYHik';


        sessionSuccess = function(result){
            console.log('session found user ' + result.username);
            if(result.oauth == true){

                me.loggedInView = Ext.create('Recccords.view.LoggedInContainer', {
                    title: 'Welcome to Recccords'
                });
                //var model = getStore('
                me.getSubContainer().removeAll(true,false);
                me.getSubContainer().push(me.loggedInView);
            }
            else {
                me.releaseListView = Ext.create('Recccords.view.ReleaseListContainer', {
                    title: 'Collection'
                });
                var store = Ext.data.StoreManager.lookup('ReleaseStore');
                store.load(function() {
                    //callback(store);
                    me.getReleaseList().setStore(store);
                    console.log('loaded count '+store.getCount());
                });
                me.getSubContainer().removeAll(true,false);
                me.getSubContainer().push(me.releaseListView);
            }
            // me.parseLogin(me.appkey,me.jskey,{username:me.username,password:me.password});
        }
        me.sessionSuccess = sessionSuccess;
        sessionFailure = function(result) {
            console.log('no user session found');

        }
        me.sessionFailure = sessionFailure;

        me.checkSession(me.sessionSuccess,me.sessionFailure);
    },

    checkSession: function(successcallback, failcallback) {
        console.log('checksession ');
        Ext.Ajax.request({
            url: 'index/',
            method: 'POST',
            success: function(response){
                var responseObj = JSON.parse(response.responseText);
                console.log("checksession result: " + responseObj.username + " need_oauth " + responseObj.oauth + " oauth_saved " + responseObj.saved);
                if(responseObj.username == ''){
                    failcallback(responseObj);
                }
                else{
                    successcallback(responseObj);
                }
            }
        });

    }

});